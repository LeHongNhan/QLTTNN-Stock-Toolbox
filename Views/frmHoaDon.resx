<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnInHoaDon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABL1JREFUeF7tnV9vk2UYxvs1CHjGMCaAxyZ4oLBps82OAz+F/AlEuroEZWMQI4aY
        GENi/AL8CyEBPEASp4ZEghyIDhJnnFtbxtKWrX6A2+d5dkMe69Xt4S7Z25v3/iW/k7Jefa6r797thLVg
        GIZhGIZhGIZhGMaLolSlV8ZqdMnZHqsTqXLtzFfeq9KrXEcXfvxSnZr/K6bPlu/CtfQQrnxcSJ2lGl3g
        WnpQedvpZo1WuZYeYBHFci09oBKa5Vp6QCU0y7X0gEpolmvpAZXQLNfSAyqhWa7Vh4zPDhfKs9VC+QHF
        ohKa7exXODa7WCg/LPIKGRIO0nE4JyqhWdTRucArZAg+GCyhWdQxmDnoUE5UQrOoYzBz0KGcqIRmUcdg
        5qBDOVEJzaKOwcxBh3KiEppFHYOZgw7lRCU0izoGMwcdyolKaBZ1DGYOOpQTldAs6hjcDA6WP9l2YHzy
        4oHKZPtgZYrM7oaNxicvHzo2NcDz9UYYvzLVRC9mdtdvdmRieivPKMdf+egFzI113w3neUY5dtvpxckV
        nlEODjZT5RnloFAzXZ5RDgo10+UZ5aBQM12eUQ4KNdPlGeWgUDNdnlEOCs2bx09/QT/+/AstPnpMf1Xr
        dPOH21Q5+Tn82k55RjkoNE+e+OxLetRoUqv9z3/8c6FKH378KXxOLM8oB4Xmybu//h4G/3axTfu+f0Jv
        fdekG/Mr4bHrt2bgc2J5RjkoNC8eOX6amqvtMPbgzBPaeb1Br11dpjevLYfH/phfgM+L5RnloNC8eDS8
        AWu3HH/l+/F3XFqiN64uhcfm/q7C58XyjHJQaJ68/3AujO1vO3vcle/HvzbXCo/dnLkNnxPLM8pBoXny
        zFff0HJr7Z4fu1BfosrUGficWJ5RDgrNm9Nnz9G93x5QY6Ud3oyf7tyjiVNn4dd2yjPKQaF59fDENB36
        CP9bN3lGOSjUTJdnlINCzXR5Rjko1EyXZ5SDQs10eUY5KNRMl2eUg0LNdHlGOSjUTJdnlINCzXR5Rjko
        1EyXZ5SDQs10eUY5KNRMl2eUg0JjPyifoKGRMdq5azcNDAw8c8vX8y+VcTff9Z2R/aE72iSWZ5SDQmP9
        QeLDPRWV0Czq6LujTWJ5RjkoNLbzyn8qKqFZ1NF3R5vE8oxyUGhsnt+AXbtfh5vE8oxyUGhst1sQ+m8+
        mkUd++IW5H8Q+YN0fiegEpqNu/XVD+FuohKaRR1T5BnloNAUUQnNoo4p8oxyUGiKqIRmUccUeUY5KDRF
        VEKzqGOKPKMcFJoiKqFZ1DFFnlEOCk0RldAs6pgizygHhaaISmgWdUyRZ5SDQlNEJTSLOqbIM8pBoSmi
        EppFHVPkGeUMj71PElEJzaKOKfKMcvYVR1cHi6P0vKISmkUdN3ak9z9V4EIu4/D1RSU0izpupLt4L/KM
        cvYWizvcm9BAL7CeqIRmUcf1dOM3h4ZGt/OMvfH28PDWwXdHzj/P7QiV0CzqiPQb+Sv/hY0vBZXQLNfS
        AyqhWa6lh5fpQ3xKNer9t5nNxh38SmcRrbo3oPc/PbbZ+E+gc4dvdZbRZqlOjf2LtI1r6SJ8ml6NLvjP
        4ULl+lp3Zn/lqx3fMAzDMAzDMAzDMPqQQuFfoabCOyfCNkcAAAAASUVORK5CYII=
</value>
  </data>
</root>